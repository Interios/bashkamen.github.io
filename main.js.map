{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_interceptors/auth.interceptor.ts","webpack:///./src/app/_interceptors/jwt.interceptor.ts","webpack:///./src/app/_services/auth/auth.service.ts","webpack:///./src/app/_services/auth/index.ts","webpack:///./src/app/_services/session/index.ts","webpack:///./src/app/_services/session/session.service.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.sass","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.router.module.ts","webpack:///./src/app/components/loading/loading.component.ts","webpack:///./src/app/components/loading/loading.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./components/auth/auth.module\": [\n\t\t\"./src/app/components/auth/auth.module.ts\",\n\t\t\"default~components-auth-auth-module~components-main-main-module\",\n\t\t\"components-auth-auth-module\"\n\t],\n\t\"./components/main/main.module\": [\n\t\t\"./src/app/components/main/main.module.ts\",\n\t\t\"default~components-auth-auth-module~components-main-main-module\",\n\t\t\"components-main-main-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { HttpInterceptor, HttpHandler, HttpEvent, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private router: Router) {}\r\n    intercept( request: HttpRequest<any>, next: HttpHandler ): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            // Swal.fire({\r\n            //     type: 'error',\r\n            //     title: 'Oops...',\r\n            //     text: 'Something went wrong!'\r\n            // })\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.router.navigate(['login']); \r\n            }\r\n            if(err.status === 500) {\r\n                this.router.navigate(['/']);\r\n            }\r\n            const error = err.error.message || err.statusText;\r\n            return throwError(err);\r\n        }))\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor( ) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        let currentUser = false;\r\n        if (currentUser) {\r\n            request = request.clone({\r\n                setHeaders: { \r\n                    Authorization: `Bearer ${ currentUser }`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { HttpHeaders, HttpClient, HttpParams, HttpErrorResponse } from '@angular/common/http';\r\nimport { SessionService } from '../session';\r\nimport { LoadingService } from 'src/app/components/loading/loading.service';\r\n\r\nconst url = \"https://casino-dev.azurewebsites.net\";\r\n\r\nclass User {\r\n    token:string;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class AuthService {\r\n    constructor(\r\n        private http: HttpClient,\r\n        private session: SessionService,\r\n        private loading: LoadingService\r\n    ) { }\r\n    \r\n    login = ({ Login, Password }) => {\r\n        this.loading.show('loading...');\r\n        this.http.post( url + '/api/auth/login', { Login, Password }, { responseType: 'text' })\r\n            .subscribe((data) => {\r\n                data ? this.session.set('auth.token', data) : '';\r\n                this.loading.hide('loading...', 300);\r\n            }, (err: HttpErrorResponse) => {\r\n                console.log('error: ', err);\r\n                this.loading.hide('loading...', 300);\r\n            })\r\n    }\r\n        \r\n    \r\n    registration = ({ Login, Password }) => {\r\n        this.http.post( url + '/api/auth/register', { Login, Password }, { responseType: 'text' })\r\n            .subscribe((data) => {\r\n                data ? this.session.set('auth.token', data) : '';\r\n            }, (err: HttpErrorResponse) => {\r\n                console.log('error: ', err);\r\n            })\r\n    }\r\n}","export * from './auth.service';","export * from './session.service';","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class SessionService {\r\n    set(name:string, data: string) {\r\n        window.localStorage.setItem(name,data);\r\n    }\r\n    get(name:string) {\r\n        window.localStorage.getItem(name);\r\n    }\r\n    remove(name:string) {\r\n        window.localStorage.removeItem(name);\r\n    }\r\n}","module.exports = \"<router-outlet></router-outlet>\\r\\n<!-- <button class=\\\"send\\\" (click)=\\\"handleSend()\\\">SEND</button> -->\\r\\n<spinner name=\\\"loading...\\\"></spinner>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.sass']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor() { \r\n\r\n  }\r\n\r\n  title = 'app-casino';\r\n  \r\n  ngOnInit() {}\r\n  // this.hubConnection.on(\"SendMessage\", function (message, userName) {\r\n  //   console.log(message, userName);\r\n  // });\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppRouterModule } from './app.router.module';\r\n\r\nimport { AuthService } from './_services/auth';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { LoadingComponent } from './components/loading/loading.component';\r\nimport { LoadingService } from './components/loading/loading.service';\r\n\r\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\r\nimport { AuthInterceptor } from './_interceptors/auth.interceptor';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoadingComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRouterModule\r\n  ],\r\n  providers: [\r\n    AuthService,\r\n    LoadingService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routers: Routes = [\r\n    { path: '', loadChildren: './components/auth/auth.module#AuthModule' },\r\n    { path: '', loadChildren: './components/main/main.module#MainModule' },\r\n    { path: '**', redirectTo: '/' }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routers)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class AppRouterModule {}","import { Component, Input, OnInit } from '@angular/core';\r\nimport { LoadingService } from './loading.service';\r\n\r\n@Component({\r\n  selector: 'spinner',\r\n  template: `\r\n    <div *ngIf=\"show\" class=\"loading\">\r\n        <div class=\"lds-dual-ring\"></div>\r\n        <ng-content></ng-content>\r\n    </div>\r\n  `\r\n})\r\nexport class LoadingComponent implements OnInit {  \r\n    @Input() name: string;\r\n    @Input() group: string;\r\n    @Input() show = false;\r\n\r\n    constructor(private loading: LoadingService) {}\r\n\r\n    ngOnInit(): void {\r\n        if (!this.name) throw new Error(\"Loading must have a 'name' attribute.\");\r\n\r\n        this.loading._register(this);\r\n    }\r\n}","import { Injectable } from '@angular/core';  \r\nimport { LoadingComponent } from './loading.component';\r\n\r\n@Injectable()\r\nexport class LoadingService {  \r\n  private loadingCache = new Set<LoadingComponent>();\r\n\r\n  _register(loading: LoadingComponent): void {\r\n    this.loadingCache.add(loading);\r\n  }\r\n\r\n  show(loadingName: string): void {\r\n    this.loadingCache.forEach(loading => {\r\n      if (loading.name === loadingName) {\r\n        loading.show = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  hide(loadingName: string, delay: number = 0): void {\r\n    this.loadingCache.forEach(loading => {\r\n      if (loading.name === loadingName) {\r\n        setTimeout( () => {\r\n          loading.show = false;\r\n        }, delay );\r\n      }\r\n    });\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}